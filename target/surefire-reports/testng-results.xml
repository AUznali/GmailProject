<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="24" passed="24">
  <reporter-output>
  </reporter-output>
  <suite name="AutoContentVerification" duration-ms="28571" started-at="2018-03-27T19:03:08Z" finished-at="2018-03-27T19:03:37Z">
    <groups>
      <group name="ErrorMessages">
        <method signature="RequiredFields.birthDayEmpty()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="birthDayEmpty" class="TestsSignUpPage.RequiredFields"/>
        <method signature="RequiredFields.birthMonthEmpty()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="birthMonthEmpty" class="TestsSignUpPage.RequiredFields"/>
        <method signature="RequiredFields.birthYearEmpty()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="birthYearEmpty" class="TestsSignUpPage.RequiredFields"/>
        <method signature="RequiredFields.eMailEmpty()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="eMailEmpty" class="TestsSignUpPage.RequiredFields"/>
        <method signature="RequiredFields.firstNameEmpty()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="firstNameEmpty" class="TestsSignUpPage.RequiredFields"/>
        <method signature="RequiredFields.genderEmpty()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="genderEmpty" class="TestsSignUpPage.RequiredFields"/>
        <method signature="RequiredFields.lastNameEmpty()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="lastNameEmpty" class="TestsSignUpPage.RequiredFields"/>
        <method signature="RequiredFields.passAgainEmpty()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="passAgainEmpty" class="TestsSignUpPage.RequiredFields"/>
        <method signature="RequiredFields.passEmpty()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="passEmpty" class="TestsSignUpPage.RequiredFields"/>
      </group> <!-- ErrorMessages -->
    </groups>
    <test name="Sign up new user" duration-ms="28571" started-at="2018-03-27T19:03:08Z" finished-at="2018-03-27T19:03:37Z">
      <class name="TestsSignUpPage.RequiredFields">
        <test-method status="PASS" signature="setup()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="setup" is-config="true" duration-ms="11" started-at="2018-03-27T12:03:08Z" finished-at="2018-03-27T12:03:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="beforeClass" is-config="true" duration-ms="5351" started-at="2018-03-27T12:03:08Z" finished-at="2018-03-27T12:03:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="openDriver()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="openDriver" is-config="true" duration-ms="2461" started-at="2018-03-27T12:03:14Z" finished-at="2018-03-27T12:03:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openDriver -->
        <test-method status="PASS" signature="birthDayEmpty()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="birthDayEmpty" duration-ms="149" started-at="2018-03-27T12:03:16Z" finished-at="2018-03-27T12:03:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- birthDayEmpty -->
        <test-method status="PASS" signature="birthMonthEmpty()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="birthMonthEmpty" duration-ms="137" started-at="2018-03-27T12:03:16Z" finished-at="2018-03-27T12:03:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- birthMonthEmpty -->
        <test-method status="PASS" signature="birthYearEmpty()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="birthYearEmpty" duration-ms="97" started-at="2018-03-27T12:03:17Z" finished-at="2018-03-27T12:03:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- birthYearEmpty -->
        <test-method status="PASS" signature="eMailEmpty()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="eMailEmpty" duration-ms="140" started-at="2018-03-27T12:03:17Z" finished-at="2018-03-27T12:03:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- eMailEmpty -->
        <test-method status="PASS" signature="firstNameEmpty()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="firstNameEmpty" duration-ms="110" started-at="2018-03-27T12:03:17Z" finished-at="2018-03-27T12:03:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstNameEmpty -->
        <test-method status="PASS" signature="genderEmpty()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="genderEmpty" duration-ms="102" started-at="2018-03-27T12:03:17Z" finished-at="2018-03-27T12:03:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- genderEmpty -->
        <test-method status="PASS" signature="lastNameEmpty()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="lastNameEmpty" duration-ms="95" started-at="2018-03-27T12:03:17Z" finished-at="2018-03-27T12:03:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastNameEmpty -->
        <test-method status="PASS" signature="passAgainEmpty()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="passAgainEmpty" duration-ms="93" started-at="2018-03-27T12:03:17Z" finished-at="2018-03-27T12:03:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passAgainEmpty -->
        <test-method status="PASS" signature="passEmpty()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="passEmpty" duration-ms="96" started-at="2018-03-27T12:03:17Z" finished-at="2018-03-27T12:03:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passEmpty -->
        <test-method status="PASS" signature="closeDriver()[pri:0, instance:TestsSignUpPage.RequiredFields@26f67b76]" name="closeDriver" is-config="true" duration-ms="257" started-at="2018-03-27T12:03:37Z" finished-at="2018-03-27T12:03:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
      </class> <!-- TestsSignUpPage.RequiredFields -->
      <class name="TestsSignUpPage.EmailVerification">
        <test-method status="PASS" signature="setup()[pri:0, instance:TestsSignUpPage.EmailVerification@153f5a29]" name="setup" is-config="true" duration-ms="6062" started-at="2018-03-27T12:03:17Z" finished-at="2018-03-27T12:03:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="ampUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@153f5a29]" name="ampUname" duration-ms="1268" started-at="2018-03-27T12:03:23Z" finished-at="2018-03-27T12:03:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[&&&&&&]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please use only letters (a-z), numbers, and periods.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ampUname -->
        <test-method status="PASS" signature="capitalUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@153f5a29]" name="capitalUname" duration-ms="1165" started-at="2018-03-27T12:03:25Z" finished-at="2018-03-27T12:03:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[MYEMAIL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Someone already has that username. Note that we ignore periods and capitalization in usernames. Try another?]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capitalUname -->
        <test-method status="PASS" signature="correctUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@153f5a29]" name="correctUname" duration-ms="1249" started-at="2018-03-27T12:03:26Z" finished-at="2018-03-27T12:03:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[myemail]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[That username is taken. Try another.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- correctUname -->
        <test-method status="PASS" signature="dashUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@153f5a29]" name="dashUname" duration-ms="1358" started-at="2018-03-27T12:03:27Z" finished-at="2018-03-27T12:03:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstname-lastname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please use only letters (a-z), numbers, and periods.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dashUname -->
        <test-method status="PASS" signature="digitsUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@153f5a29]" name="digitsUname" duration-ms="1186" started-at="2018-03-27T12:03:28Z" finished-at="2018-03-27T12:03:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[That username is taken. Try another.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- digitsUname -->
        <test-method status="PASS" signature="dotUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@153f5a29]" name="dotUname" duration-ms="760" started-at="2018-03-27T12:03:30Z" finished-at="2018-03-27T12:03:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[my.email]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Someone already has that username. Note that we ignore periods and capitalization in usernames. Try another?]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dotUname -->
        <test-method status="PASS" signature="dotsUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@153f5a29]" name="dotsUname" duration-ms="712" started-at="2018-03-27T12:03:30Z" finished-at="2018-03-27T12:03:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[myemail..myemail]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A fan of punctuation! Alas, usernames can't have consecutive periods.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dotsUname -->
        <test-method status="PASS" signature="firstDotUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@153f5a29]" name="firstDotUname" duration-ms="663" started-at="2018-03-27T12:03:31Z" finished-at="2018-03-27T12:03:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[.myemail]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[The first character of your username should be a letter (a-z) or number.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstDotUname -->
        <test-method status="PASS" signature="lastDotUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@153f5a29]" name="lastDotUname" duration-ms="675" started-at="2018-03-27T12:03:32Z" finished-at="2018-03-27T12:03:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[myemail.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[The last character of your username should be a letter (a-z) or number.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastDotUname -->
        <test-method status="PASS" signature="plusUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@153f5a29]" name="plusUname" duration-ms="755" started-at="2018-03-27T12:03:32Z" finished-at="2018-03-27T12:03:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstname+lastname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please use only letters (a-z), numbers, and periods.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- plusUname -->
        <test-method status="PASS" signature="specCharsUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@153f5a29]" name="specCharsUname" duration-ms="720" started-at="2018-03-27T12:03:33Z" finished-at="2018-03-27T12:03:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^*()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please use only letters (a-z), numbers, and periods.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- specCharsUname -->
        <test-method status="PASS" signature="twoWordsUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@153f5a29]" name="twoWordsUname" duration-ms="717" started-at="2018-03-27T12:03:34Z" finished-at="2018-03-27T12:03:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[email (Joe Smith)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please use only letters (a-z), numbers, and periods.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twoWordsUname -->
        <test-method status="PASS" signature="underscoreUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@153f5a29]" name="underscoreUname" duration-ms="639" started-at="2018-03-27T12:03:35Z" finished-at="2018-03-27T12:03:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[_______]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please use only letters (a-z), numbers, and periods.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- underscoreUname -->
        <test-method status="PASS" signature="unicodeUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@153f5a29]" name="unicodeUname" duration-ms="638" started-at="2018-03-27T12:03:35Z" finished-at="2018-03-27T12:03:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[あいうえお]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please use only letters (a-z), numbers, and periods.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unicodeUname -->
        <test-method status="PASS" signature="wSpacesUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@153f5a29]" name="wSpacesUname" duration-ms="661" started-at="2018-03-27T12:03:36Z" finished-at="2018-03-27T12:03:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[   myemail   ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[That username is taken. Try another.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wSpacesUname -->
        <test-method status="PASS" signature="closeDriver()[pri:0, instance:TestsSignUpPage.EmailVerification@153f5a29]" name="closeDriver" is-config="true" duration-ms="220" started-at="2018-03-27T12:03:37Z" finished-at="2018-03-27T12:03:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
      </class> <!-- TestsSignUpPage.EmailVerification -->
    </test> <!-- Sign up new user -->
  </suite> <!-- AutoContentVerification -->
</testng-results>
