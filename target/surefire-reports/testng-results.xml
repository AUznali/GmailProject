<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="14" passed="13">
  <reporter-output>
  </reporter-output>
  <suite name="AutoContentVerification" duration-ms="26867" started-at="2018-03-26T02:05:54Z" finished-at="2018-03-26T02:06:21Z">
    <groups>
    </groups>
    <test name="Sign up new user" duration-ms="26867" started-at="2018-03-26T02:05:54Z" finished-at="2018-03-26T02:06:21Z">
      <class name="TestsSignUpPage.EmailVerification">
        <test-method status="PASS" signature="setup()[pri:0, instance:TestsSignUpPage.EmailVerification@61dc03ce]" name="setup" is-config="true" duration-ms="9142" started-at="2018-03-25T19:05:54Z" finished-at="2018-03-25T19:06:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="capitalUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@61dc03ce]" name="capitalUname" duration-ms="1305" started-at="2018-03-25T19:06:03Z" finished-at="2018-03-25T19:06:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[MYEMAIL]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Someone already has that username. Note that we ignore periods and capitalization in usernames. Try another?]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- capitalUname -->
        <test-method status="FAIL" signature="correctUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@61dc03ce]" name="correctUname" duration-ms="1203" started-at="2018-03-25T19:06:05Z" finished-at="2018-03-25T19:06:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[&]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[That username is taken. Try another.]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:86)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.junit.Assert.assertTrue(Assert.java:52)
	at Pages.SignUpPage.validUname(SignUpPage.java:246)
	at TestsSignUpPage.EmailVerification.correctUname(EmailVerification.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- correctUname -->
        <test-method status="PASS" signature="dashUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@61dc03ce]" name="dashUname" duration-ms="1339" started-at="2018-03-25T19:06:06Z" finished-at="2018-03-25T19:06:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstname-lastname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please use only letters (a-z), numbers, and periods.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dashUname -->
        <test-method status="PASS" signature="digitsUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@61dc03ce]" name="digitsUname" duration-ms="1268" started-at="2018-03-25T19:06:07Z" finished-at="2018-03-25T19:06:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[That username is taken. Try another.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- digitsUname -->
        <test-method status="PASS" signature="dotUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@61dc03ce]" name="dotUname" duration-ms="1252" started-at="2018-03-25T19:06:08Z" finished-at="2018-03-25T19:06:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[my.email]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Someone already has that username. Note that we ignore periods and capitalization in usernames. Try another?]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dotUname -->
        <test-method status="PASS" signature="dotsUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@61dc03ce]" name="dotsUname" duration-ms="1264" started-at="2018-03-25T19:06:10Z" finished-at="2018-03-25T19:06:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[myemail..myemail]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[A fan of punctuation! Alas, usernames can't have consecutive periods.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dotsUname -->
        <test-method status="PASS" signature="firstDotUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@61dc03ce]" name="firstDotUname" duration-ms="1215" started-at="2018-03-25T19:06:11Z" finished-at="2018-03-25T19:06:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[.myemail]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[The first character of your username should be a letter (a-z) or number.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstDotUname -->
        <test-method status="PASS" signature="lastDotUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@61dc03ce]" name="lastDotUname" duration-ms="1248" started-at="2018-03-25T19:06:12Z" finished-at="2018-03-25T19:06:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[myemail.]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[The last character of your username should be a letter (a-z) or number.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastDotUname -->
        <test-method status="PASS" signature="plusUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@61dc03ce]" name="plusUname" duration-ms="1279" started-at="2018-03-25T19:06:13Z" finished-at="2018-03-25T19:06:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstname+lastname]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please use only letters (a-z), numbers, and periods.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- plusUname -->
        <test-method status="PASS" signature="specCharsUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@61dc03ce]" name="specCharsUname" duration-ms="1206" started-at="2018-03-25T19:06:15Z" finished-at="2018-03-25T19:06:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[!@#$%^*()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please use only letters (a-z), numbers, and periods.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- specCharsUname -->
        <test-method status="PASS" signature="twoWordsUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@61dc03ce]" name="twoWordsUname" duration-ms="1255" started-at="2018-03-25T19:06:16Z" finished-at="2018-03-25T19:06:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[email (Joe Smith)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please use only letters (a-z), numbers, and periods.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twoWordsUname -->
        <test-method status="PASS" signature="underscoreUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@61dc03ce]" name="underscoreUname" duration-ms="1185" started-at="2018-03-25T19:06:17Z" finished-at="2018-03-25T19:06:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[_______]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please use only letters (a-z), numbers, and periods.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- underscoreUname -->
        <test-method status="PASS" signature="unicodeUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@61dc03ce]" name="unicodeUname" duration-ms="1163" started-at="2018-03-25T19:06:18Z" finished-at="2018-03-25T19:06:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[あいうえお]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Please use only letters (a-z), numbers, and periods.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unicodeUname -->
        <test-method status="PASS" signature="wSpacesUname(java.lang.String, java.lang.String)[pri:0, instance:TestsSignUpPage.EmailVerification@61dc03ce]" name="wSpacesUname" duration-ms="1261" started-at="2018-03-25T19:06:19Z" finished-at="2018-03-25T19:06:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[   myemail   ]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[That username is taken. Try another.]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wSpacesUname -->
        <test-method status="PASS" signature="closeDriver()[pri:0, instance:TestsSignUpPage.EmailVerification@61dc03ce]" name="closeDriver" is-config="true" duration-ms="242" started-at="2018-03-25T19:06:21Z" finished-at="2018-03-25T19:06:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closeDriver -->
      </class> <!-- TestsSignUpPage.EmailVerification -->
    </test> <!-- Sign up new user -->
  </suite> <!-- AutoContentVerification -->
</testng-results>
